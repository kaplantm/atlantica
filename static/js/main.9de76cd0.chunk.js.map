{"version":3,"sources":["components/Post/not-found.svg","constants.js","components/Post/Post.js","components/NewsFeed/NewsFeed.js","components/Page/Page.js","components/NavBar/NavBar.js","components/Header/Header.js","components/Waves/Waves.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","PAGES_PUBLIC_REL_PATH","Post","path","published","title","type","loader","page","useState","undefined","markdown","setMarkdown","error","setError","useEffect","timeout","setErrorAfterTimeout","setTimeout","fetch","then","response","a","text","status","data","clearTimeout","catch","e","className","src","require","alt","size","color","loading","includes","console","warn","key","source","escapeHtml","NewsFeed","only","useOnly","news","map","newsConfig","file","Page","props","url","match","sidebarImageUrl","fileName","substring","markdownPath","hightlightNewsPost","home","isHome","isNews","renderContent","curriedPage","initializationProps","NavBar","navigationRoutes","location","useLocation","navigationRoute","route","href","target","rel","filePath","pathname","to","Header","Waves","viewBox","preserveAspectRatio","shapeRendering","id","d","x","y","fill","Boolean","window","hostname","ReactDOM","render","sidebar","images","Math","floor","random","length","basename","navigation","curriedPageParams","navigationPageUrlConfigMap","reduce","accumulator","currentValue","exact","component","renderRoutes","version","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9de76cd0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/not-found.8677fbe5.svg\";","// export const PAGES_PUBLIC_REL_PATH = \"../../../assets/pages\"; // local\nexport const PAGES_PUBLIC_REL_PATH =\n  \"https://kaplantm.github.io/atlantica/assets/pages\"; // prod\n","import React, { useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport Loader from \"react-spinners/BeatLoader\";\nimport \"./style.scss\";\n\nexport function Post({ path, published, title, type = \"post\", page, loader }) {\n  const [markdown, setMarkdown] = useState(undefined);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    let timeout;\n    setErrorAfterTimeout();\n    function setErrorAfterTimeout() {\n      timeout = setTimeout(function() {\n        setError(true);\n      }, 3000);\n    }\n\n    if (!loader) {\n      fetch(path)\n        .then(async response => {\n          return { text: await response.text(), status: response.status };\n        })\n        .then((data = {}) => {\n          if (data.status !== 404) {\n            setMarkdown(data.text);\n            setError(false);\n            clearTimeout(timeout);\n          } else {\n            setErrorAfterTimeout();\n          }\n        })\n        .catch(e => {\n          setErrorAfterTimeout();\n        });\n    }\n    return function cleanup() {\n      clearTimeout(timeout);\n    };\n  }, [path, loader]);\n\n  function renderError() {\n    return (\n      <div className=\"not-found\">\n        <img src={require(\"./not-found.svg\")} alt=\"Content not found\" />\n        <span>Failed to load content</span>\n      </div>\n    );\n  }\n\n  if (!markdown || error) {\n    return (\n      <div className=\"post-container loading\">\n        <div className=\"loader\">\n          {error ? (\n            renderError()\n          ) : (\n            <Loader size={20} color={\"#ffffffbf\"} loading={true} />\n          )}\n        </div>\n      </div>\n    );\n  }\n  if (\n    markdown &&\n    (markdown.includes(\"404: Not Found\") || markdown.includes(\"Cannot GET\"))\n  ) {\n    console.warn(\"Post not found:\", title);\n    return null;\n  }\n  return (\n    <div key={`${path}-post`}>\n      <div className={`post-container ${type}`}>\n        <div className=\"post-header\">\n          <span className=\"published\">{published}</span>\n          {title && (\n            <h3 className={`${published && \"small-top-margin\"}`}>{title}</h3>\n          )}\n        </div>\n\n        <ReactMarkdown source={markdown} escapeHtml={false} />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { PAGES_PUBLIC_REL_PATH } from \"../../constants\";\nimport { Post } from \"../Post/Post\";\nimport { news } from \"../../configs/news-config.json\";\nimport \"./style.scss\";\n\nexport function NewsFeed({ only, useOnly }) {\n  return news.map((newsConfig = {}) => {\n    const { type, file, title, published } = newsConfig;\n    if (useOnly && file !== only) {\n      return null;\n    }\n    return (\n      <Post\n        published={published}\n        path={`${PAGES_PUBLIC_REL_PATH}/news/${file}.md`}\n        type={type}\n        title={title}\n        key={file}\n      />\n    );\n  });\n}\n","import React from \"react\";\nimport { PAGES_PUBLIC_REL_PATH } from \"../../constants\";\nimport { NewsFeed } from \"../NewsFeed/NewsFeed\";\nimport { Post } from \"../Post/Post\";\nimport { home } from \"../../configs/home-config.json\";\n\nimport \"./style.scss\";\n\nfunction removeSlashFromURL(url) {\n  if (url && url[0] === \"/\") {\n    return url.substring(1);\n  }\n  return url;\n}\n\nexport function Page(props) {\n  const { match, sidebarImageUrl, loader } = props;\n  const fileName = match.url === \"/\" ? \"home\" : removeSlashFromURL(match.url);\n  const markdownPath = `${PAGES_PUBLIC_REL_PATH}/${fileName}.md`;\n  const hightlightNewsPost = home.hightlightNewsPost || null;\n\n  const isHome = match.url === \"/home\" || match.url === \"/\";\n  const isNews = match.url === \"/news\";\n\n  function renderContent() {\n    return (\n      <>\n        {(isNews || isHome) && (\n          <NewsFeed useOnly={isHome} only={hightlightNewsPost} />\n        )}\n        {!isNews && <Post path={markdownPath} page={true} loader={loader} />}\n      </>\n    );\n  }\n  return (\n    <div className=\"page-container\" key={`${markdownPath}-page`}>\n      <div className=\"content-column\">\n        {!isHome && renderContent()}\n\n        {isHome && hightlightNewsPost !== undefined && renderContent()}\n      </div>\n      <div className=\"fun-column\">\n        {<img className=\"swing\" alt=\"Random Cartoon\" src={sidebarImageUrl} />}\n      </div>\n    </div>\n  );\n}\n\nexport function curriedPage(initializationProps = {}) {\n  return props => Page({ ...initializationProps, ...props });\n}\n","import React from \"react\";\nimport \"./style.scss\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nexport function NavBar({ navigationRoutes }) {\n  let location = useLocation();\n  function renderNavBarRoutes() {\n    return navigationRoutes.map(navigationRoute => {\n      if (navigationRoute.type === \"external\") {\n        return (\n          <li key={navigationRoute.route}>\n            <a\n              href={navigationRoute.route}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {navigationRoute.title}\n            </a>\n          </li>\n        );\n      }\n\n      const filePath = `/${navigationRoute.file}`;\n      return (\n        <li\n          key={navigationRoute.file}\n          className={location.pathname === filePath ? \"current\" : \"\"}\n        >\n          <Link to={filePath}>{navigationRoute.title}</Link>\n        </li>\n      );\n    });\n  }\n\n  if (navigationRoutes) {\n    return <ul className=\"navBar\">{renderNavBarRoutes()}</ul>;\n  }\n  return null;\n}\n","import React from \"react\";\nimport \"./style.scss\";\nimport { NavBar } from \"../NavBar/NavBar\";\n\nexport function Header({ navigationRoutes }) {\n  return (\n    <header>\n      <div>\n        <h1>RAD Atlantica</h1>\n      </div>\n      {navigationRoutes && <NavBar navigationRoutes={navigationRoutes} />}\n    </header>\n  );\n}\n","import React from \"react\";\nimport \"./style.scss\";\n\nexport function Waves(props) {\n  return (\n    <div className=\"waves-container\">\n      <div>\n        <svg\n          className=\"waves\"\n          viewBox=\"0 24 150 28\"\n          preserveAspectRatio=\"none\"\n          shapeRendering=\"auto\"\n        >\n          <defs>\n            <path\n              id=\"gentle-wave\"\n              d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\"\n            />\n          </defs>\n          <g className=\"parallax\">\n            <use href=\"#gentle-wave\" x=\"48\" y=\"0\" fill=\"rgba(255,255,255,0.7\" />\n            <use\n              href=\"#gentle-wave\"\n              x=\"48\"\n              y=\"3\"\n              fill=\"rgba(255,255,255,0.5)\"\n            />\n            <use\n              href=\"#gentle-wave\"\n              x=\"48\"\n              y=\"5\"\n              fill=\"rgba(255,255,255,0.3)\"\n            />\n            <use href=\"gentle-wave\" x=\"48\" y=\"7\" fill=\"#fff\" />\n          </g>\n        </svg>\n      </div>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport { curriedPage } from \"./components/Page/Page\";\nimport { Header } from \"./components/Header/Header\";\nimport \"./style.scss\";\nimport { Waves } from \"./components/Waves/Waves\";\nimport { version } from \"../package.json\";\nimport { sidebar } from \"./configs/sidebar-config.json\";\nimport { navigation } from \"./configs/navigation-config.json\";\nexport default function App() {\n  const sidebarImageUrl = `./assets/images/${\n    sidebar.images[Math.floor(Math.random() * sidebar.images.length)]\n  }`;\n\n  function getCurriedPageParams() {\n    const navigationPageUrlConfigMap = navigation.reduce(\n      (accumulator, currentValue) => {\n        accumulator[`/${currentValue.file}`] = { title: currentValue.title };\n        return accumulator;\n      },\n      {}\n    );\n\n    return { navigationPageUrlConfigMap, sidebarImageUrl };\n  }\n\n  function renderRoutes() {\n    const curriedPageParams = getCurriedPageParams();\n    return (\n      <>\n        <Route exact path=\"/\" component={curriedPage(curriedPageParams)} />\n        <Route\n          exact\n          path=\"/:pageName\"\n          component={curriedPage(curriedPageParams)}\n        />\n      </>\n    );\n  }\n  return (\n    <div className=\"app-container\">\n      <Waves />\n      <div>\n        <Router basename=\"/\">\n          <Header navigationRoutes={navigation} />\n\n          <div className=\"route-container-bg\">\n            <div className=\"route-container\">{renderRoutes()}</div>\n          </div>\n        </Router>\n      </div>\n      <div className=\"invisible-metadata\">Version: {version}</div>\n    </div>\n  );\n}\n"],"sourceRoot":""}